steps:
  - block: ":rocket: Release!"
    prompt: "Fill out the details for release"
    if: 'build.message =~ /^release\$/i'
    fields:
      - select: "PRE-RELEASE?"
        key: "pre-release"
        default: true
        hint: "A corresponding prefix will be added to published version ('alpha' or the one specified in RELEASE_NPM_TAG)"
        options:
          - label: "Yes, this is a PRE-release version."
            value: true
          - label: "No, this is a REAL release version."
            value: false

      - select: "RELEASE_VERSION_TYPE"
        key: "release-version-type"
        hint: "If set, a successful build will be released with a version update according to specified type"
        options:
          - label: "Patch"
            value: "patch"
          - label: "Minor"
            value: "minor"
          - label: "Major"
            value: "major"

      - select: "RELEASE_DRY_RUN"
        key: "release-dry-run"
        hint: "Don't actually release anything, just run the scripts"
        default: 'false'
        options:
          - label: "True"
            value: true
          - label: "False"
            value: false

      - select: "RELEASE_SKIP_NPM"
        key: "release-skip-npm"
        hint: "This is a hack to fix previously broken release jobs. You need to really know what you're doing"
        default: 'false'
        options:
          - label: "True"
            value: true
          - label: "False"
            value: false

      - select: "FAST_RELEASE"
        key: "fast-release"
        hint: "Skip building and testing, ONLY IF YOU REALLY REALLY HAVE TO!"
        default: 'false'
        options:
          - label: "True"
            value: true
          - label: "False"
            value: false

      - text: "RELEASE_NPM_TAG"
        key: "release-npm-tag"
        hint: "For releases from master, the default is 'latest'. For releases from other branches, the default is the branch name, or RELEASE_NPM_TAG if set. Leave NULL if no version is specified"
        default: 'null'

  - label: "Get Release Pipeline"
    command: '.buildkite/pipeline.sh release | buildkite-agent pipeline upload'
